#!/bin/bash
clear

# Función para instalar ws-epro
install_wsepro() {
    echo "Instalando ws-epro"
    sleep 2
    wget https://github.com/SparkerMoved/SSH-PLUS/raw/main/Modulos/ws-epro -O /usr/local/bin/ws-epro &&
    chmod +x /usr/local/bin/ws-epro

    if wget https://raw.githubusercontent.com/SparkerMoved/SSH-PLUS/main/Modulos/ws-epro.service -O /etc/systemd/system/ws-epro.service; then
        chmod +x /etc/systemd/system/ws-epro.service
    else
        echo "Error al descargar ws-epro.service"
        exit 1
    fi

    if wget https://raw.githubusercontent.com/SparkerMoved/SSH-PLUS/main/Modulos/port.bin -O /usr/bin/ws-port; then
        chmod +x /usr/bin/ws-port
    else
        echo "Error al descargar port.bin"
        exit 1
    fi

    # Configuración de puertos
    clear
    echo "ELEGIR PUERTOS"
    sleep 1
    read -p "Puerto Local : " openssh
    read -p "Puerto Phyton : " wsopenssh

    WS_DIR=/usr/local/etc/ws-epro
    if [ -d "$WS_DIR" ]; then
        rm -rf "$WS_DIR"
    fi
    mkdir "$WS_DIR"

    echo "EMPEZAMOS A CONFIGURAR WS-EPRO..."
    sleep 2
    echo "# verbose level 0=info, 1=verbose, 2=very verbose" >> /usr/local/etc/ws-epro/config.yml
    echo "verbose: 0" >> /usr/local/etc/ws-epro/config.yml
    echo "listen:"  >> /usr/local/etc/ws-epro/config.yml
    echo "##openssh" >> /usr/local/etc/ws-epro/config.yml
    echo "- target_host: 127.0.0.1" >> /usr/local/etc/ws-epro/config.yml
    echo "##portopenssh" >> /usr/local/etc/ws-epro/config.yml
    echo "  target_port: $openssh" >> /usr/local/etc/ws-epro/config.yml
    echo "##wsopenssh" >> /usr/local/etc/ws-epro/config.yml
    echo "  listen_port: $wsopenssh" >> /usr/local/etc/ws-epro/config.yml

    chmod +x /usr/local/etc/ws-epro/config.yml

    # Habilitar y arrancar el servicio
    systemctl daemon-reload
    systemctl enable ws-epro
    systemctl start ws-epro

    echo "CONFIGURANDO TU DROPLET 🇦🇷🌍.."
    sleep 3
    clear
    LP='\033[1;35m'
    NC='\033[0m' # No Color
    echo -e "${LP}"
    echo "=========== VENTA DE DROPLET🇦🇷🇦🇷  @maxplayvpn ============"
    echo "---------------------------------------"
    echo "   Puerto Local : $openssh"
    echo "   Puerto Phyton: $wsopenssh"
    echo "---------------------------------------"
    echo ""
    echo "Probado en ubuntu 20"
    echo -e "${NC}"
    rm -rf install-ws && cat /dev/null > ~/.bash_history && history -c
}

# Función para desactivar ws-epro
disable_wsepro() {
    systemctl stop ws-epro
    systemctl disable ws-epro
    echo "ws-epro ha sido desactivado."
}

# Función para activar ws-epro
enable_wsepro() {
    if [ ! -f /etc/systemd/system/ws-epro.service ]; then
        echo "El archivo de servicio ws-epro.service no existe. Reinstalando..."
        install_wsepro
        return
    fi
    systemctl daemon-reload
    systemctl enable ws-epro
    systemctl start ws-epro
    echo "ws-epro ha sido activado."
}

# Función para desinstalar ws-epro
uninstall_wsepro() {
    systemctl stop ws-epro
    systemctl disable ws-epro
    rm -f /usr/local/bin/ws-epro
    rm -f /etc/systemd/system/ws-epro.service
    rm -f /usr/bin/ws-port
    rm -rf /usr/local/etc/ws-epro
    systemctl daemon-reload
    echo "ws-epro ha sido desinstalado."
}

# Verificar si ws-epro está instalado
if command -v ws-epro &> /dev/null; then
    echo "ws-epro ya está instalado."
    echo "¿Qué te gustaría hacer?"
    echo "1. Desactivar ws-epro"
    echo "2. Activar ws-epro"
    echo "3. Desinstalar ws-epro"
    echo "4. Salir"
    read -p "Elige una opción: " option

    case $option in
        1)
            disable_wsepro
            ;;
        2)
            enable_wsepro
            ;;
        3)
            uninstall_wsepro
            ;;
        *)
            echo "Saliendo..."
            ;;
    esac
else
    install_wsepro
fi

echo "ENTER para volver al MENU!"
read